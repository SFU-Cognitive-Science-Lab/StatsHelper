library(ggplot2);
library(dplyr);    # data munging
library(scales);  # nicer axis scale labels
library(rlang);
install.packages("gapminder");
library(gapminder);
colnames(gapminder)
summary(gapminder)
no_miss <- gapminder[complete.cases(gapminder),];
## since no_miss is equal length as gapminder, we can assume they are all complete rows
checkMissingYears <- table(gapminder$country, gapminder$year);
## this table contains only 1s upon quick visual inspection, so we're good, but I'll automate this a bit to make it easier
unique(checkMissingYears)
## Since this is equal to 1 and no other values, we can safely say that all countries have data for all the years since there would also be a zero as a unique value if even just one country were missing data for a year.
## Since there are 12 years of data for each country and we know there is no missing data, we just divide by 12 to get the number of unique countries per continent.
table(gapminder$continent)/12
ggplot(gapminder, aes(x=continent)) + geom_bar()
ggplot(gapminder, aes(x=continent, fill=continent)) + geom_bar()
ggplot(gapminder, aes(x=continent, fill=continent)) +
geom_bar(aes(y=..count../12)) +
labs(y="Number of countries") +
guides(fill=FALSE)
ggplot(gapminder, aes(x=lifeExp)) +
geom_density()
ggplot(data=gapminder, aes(x=lifeExp)) +
geom_density(size=1.5, fill="pink", alpha=0.3)
ggplot(data=gapminder, aes(x=lifeExp, fill=continent)) +
geom_density(alpha=0.3)
gap1 <- ggplot(data=gapminder, aes(x=continent, y=lifeExp, fill=continent))
gap1 +
geom_boxplot()
gap1 + geom_violin()+
guides(fill=FALSE)+
coord_flip()
gapminder %>%
mutate(continent = reorder(continent, lifeExp, FUN=median))
gapminder %>%
mutate(continent = reorder(continent, lifeExp, FUN=max)) %>%
ggplot(aes(x=continent, y=lifeExp, fill=continent)) +
geom_boxplot(outlier.size=2)
ggplot(data=gapminder, aes(x=gdpPercap)) +
geom_density()
## I'm seeing more of an F-distribution in this case, with a ling tail stretching out to the right.
ggplot(data=gapminder, aes(x=gdpPercap, FUN=continent, fill=continent)) +
geom_density(alpha=0.3)+
scale_x_log10()
## was getting some weird results with coord_trans(x="log10"), so I found this online :P
ggplot(gapminder, aes(x=year, y=lifeExp, group=country)) +
geom_line()
gapminder %>%
group_by(country) %>%
summarise(sd=sd(lifeExp), IQR=IQR(lifeExp)) %>%
top_n(8) %>%
arrange(desc(sd))
gapminder %>%
group_by(country) %>%
summarise(mean=mean(lifeExp), sd=sd(lifeExp)) %>%
arrange(desc(sd))
gapminder %>%
group_by(continent, year) %>%
summarise(lifeExp=median(lifeExp)) %>% head()
gapminder %>%
group_by(continent, year) %>%
summarise(lifeExp=median(lifeExp)) %>%
ggplot(aes(x=year, y=lifeExp, color=continent)) +
geom_line(size=1) +
geom_point(size=1.5)
ggplot(gapminder, aes(x=year, y=lifeExp, color=continent)) +
geom_point(size=1.5) +
geom_smooth(aes(fill=continent), method="lm")
ggplot(gapminder, aes(x=year, y=lifeExp, color=continent)) +
geom_point(size=1.5) +
geom_smooth(aes(fill=continent), method="loess")
## loess definitely does a better job of emphasizing some of then nuance in the change in life expectancy over the years. While it certainly does a better job than the linear model, I can't help but feel that the raw curves still felt better, though I get that they didn't have error bars, so it might just be me fooling myself.
install.packages("directlabels", repos="http://r-forge.r-project.org")
library(directlabels)
library(lattice)
ggplot(gapminder, aes(x=year, y=lifeExp, color=continent)) +
geom_point(size=1.5) +
geom_smooth(aes(fill=continent), method="loess") +
direct.label()
install.packages("directlabels")
library(directlabels)
ggplot(gapminder, aes(x=year, y=lifeExp, color=continent)) +
geom_point(size=1.5) +
geom_smooth(aes(fill=continent), method="loess") +
direct.label()
ggplot(gapminder, aes(x=year, y=lifeExp, color=continent)) +
geom_point(size=1.5) +
geom_smooth(aes(fill=continent), method="loess") +
direct.label(p, list("bottom.pieces", colour='black'))
ggplot(gapminder, aes(x=year, y=lifeExp, color=continent)) +
geom_point(size=1.5) +
geom_smooth(aes(fill=continent), method="loess") +
direct.label(continent, list("bottom.pieces", colour='black'))
ggplot(gapminder, aes(x=year, y=lifeExp, color=continent)) +
geom_point(size=1.5) +
geom_smooth(aes(fill=continent), method="loess") +
direct.label(gapminder$continent, list("bottom.pieces", colour='black'))
plt <- ggplot(gapminder, aes(x=year, y=lifeExp, color=continent)) +
geom_point(size=1.5) +
geom_smooth(aes(fill=continent), method="loess")
direct.labels(plt, angled.firstpoints)
direct.labels(plt, angled.endpoints)
library(directlabels)
plt <- ggplot(gapminder, aes(x=year, y=lifeExp, color=continent)) +
geom_point(size=1.5) +
geom_smooth(aes(fill=continent), method="loess")
direct.labels(plt, angled.endpoints)
plt <- ggplot(gapminder, aes(x=year, y=lifeExp, color=continent)) +
geom_point(size=1.5) +
geom_smooth(aes(fill=continent), method="loess")
direct.label(plt, angled.endpoints)
plt <- ggplot(gapminder, aes(x=year, y=lifeExp, color=continent)) +
geom_point(size=1.5) +
geom_smooth(aes(fill=continent), method="loess")
direct.label(plt, angled.firstpoints)
direct.label(plt, method = NULL, debug = FALSE)
library(gapminder)
colnames(gapminder)
library(ggplot2)
library(dplyr)    # data munging
library(scales)
library(ggplot2)
library(dplyr)    # data munging
library(scales)  # nicer axis scale labels
install.packages("gapminder")
library(gapminder)
colnames(gapminder)
summary(gapminder)
no_miss <- gapminder[complete.cases(gapminder),];
## since no_miss is equal length as gapminder, we can assume they are all complete rows
checkMissingYears <- table(gapminder$country, gapminder$year);
## this table contains only 1s upon quick visual inspection, so we're good, but I'll automate this a bit to make it easier in case we are working with a larger dataset
unique(checkMissingYears)
## Since this is equal to 1 and no other values, we can safely say that all countries have data for all the years since there would also be a zero as a unique value if even just one country were missing data for a year.
## Since there are 12 years of data for each country and we know there is no missing data, we just divide by 12 to get the number of unique countries per continent.
table(gapminder$continent)/12
ggplot(gapminder, aes(x=continent)) + geom_bar()
ggplot(gapminder, aes(x=continent, fill=continent)) + geom_bar()
ggplot(gapminder, aes(x=continent, fill=continent)) +
geom_bar(aes(y=..count../12)) +
labs(y="Number of countries") +
guides(fill=FALSE)
ggplot(gapminder, aes(x=lifeExp)) +
geom_density()
ggplot(data=gapminder, aes(x=lifeExp)) +
geom_density(size=1.5, fill="pink", alpha=0.3)
ggplot(data=gapminder, aes(x=lifeExp, fill=continent)) +
geom_density(alpha=0.3)
gap1 <- ggplot(data=gapminder, aes(x=continent, y=lifeExp, fill=continent))
gap1 +
geom_boxplot()
gap1 + geom_violin()+
guides(fill=FALSE)+
coord_flip()
gapminder %>%
mutate(continent = reorder(continent, lifeExp, FUN=median))
gapminder %>%
mutate(continent = reorder(continent, lifeExp, FUN=max)) %>%
ggplot(aes(x=continent, y=lifeExp, fill=continent)) +
geom_boxplot(outlier.size=2)
ggplot(data=gapminder, aes(x=gdpPercap)) +
geom_density()
## I'm seeing more of an F-distribution in this case, with a ling tail stretching out to the right.
ggplot(data=gapminder, aes(x=gdpPercap, FUN=continent, fill=continent)) +
geom_density(alpha=0.3)+
scale_x_log10()
## was getting some weird results with coord_trans(x="log10"), so I found this online :P
ggplot(gapminder, aes(x=year, y=lifeExp, group=country)) +
geom_line()
gapminder %>%
group_by(country) %>%
summarise(sd=sd(lifeExp), IQR=IQR(lifeExp)) %>%
top_n(8) %>%
arrange(desc(sd))
gapminder %>%
group_by(country) %>%
summarise(mean=mean(lifeExp), sd=sd(lifeExp)) %>%
arrange(desc(sd))
gapminder %>%
group_by(continent, year) %>%
summarise(lifeExp=median(lifeExp)) %>% head()
gapminder %>%
group_by(continent, year) %>%
summarise(lifeExp=median(lifeExp)) %>%
ggplot(aes(x=year, y=lifeExp, color=continent)) +
geom_line(size=1) +
geom_point(size=1.5)
ggplot(gapminder, aes(x=year, y=lifeExp, color=continent)) +
geom_point(size=1.5) +
geom_smooth(aes(fill=continent), method="lm")
ggplot(gapminder, aes(x=year, y=lifeExp, color=continent)) +
geom_point(size=1.5) +
geom_smooth(aes(fill=continent), method="loess")
## loess definitely does a better job of emphasizing some of then nuance in the change in life expectancy over the years. While it certainly does a better job than the linear model, I can't help but feel that the raw curves still felt better, though I get that they didn't have error bars, so it might just be me fooling myself.
## install.packages("directlabels")
library(directlabels)
plt <- ggplot(gapminder, aes(x=year, y=lifeExp, color=continent)) +
geom_point(size=1.5) +
geom_smooth(aes(fill=continent), method="loess")
direct.label(plt, method = NULL, debug = FALSE)
plt <- ggplot(data=gapminder,
aes(x=gdpPercap, y=lifeExp))
plt
plt + geom_point()
plt + geom_point(aes(color=continent))
plt + geom_smooth(aes(fill=continent), method="loess")
plt + geom_smooth(aes(fill=continent), method="loess") +
scale_x_log10()
plt + geom_point(aes(group=continent, color=continent)) +
geom_smooth(aes(group=continent, color=continent), method="loess") +
scale_x_log10(labels=scales::comma) +
theme_bw()
ggplot(gapminder, aes(x=gdpPercap, y=lifeExp, size = pop))+
geom_point(aes(group=continent, color=continent), alpha=0.7) +
geom_smooth(aes(group=continent, color=continent), method="loess") +
scale_x_log10() +
theme_bw()
## I cant seem to figure out how to convert the legend to give cleaner bubbles though...will ask in class tomorrow.
ggplot(gapminder, aes(x=year, y=lifeExp, color=continent)) +
geom_smooth(aes(fill=continent), method="loess")
ggplot(gapminder, aes(x=year, y=lifeExp, color=continent)) +
geom_smooth(aes(fill=continent), method="lm")
plt <- ggplot(gapminder, aes(x=year, y=lifeExp, color=continent)) +
geom_point(size=1.5) +
geom_smooth(aes(fill=continent), method="loess")
guides(fill=FALSE)
direct.label(plt, method = NULL, debug = FALSE)
plt <- ggplot(gapminder, aes(x=year, y=lifeExp, color=continent)) +
geom_point(size=1.5) +
geom_smooth(aes(fill=continent), method="loess") +
guides(fill=FALSE)
direct.label(plt, method = NULL, debug = FALSE)
plt <- ggplot(gapminder, aes(x=year, y=lifeExp, color=continent)) +
geom_smooth(aes(fill=continent), method="loess") +
guides(fill=FALSE)
plt <- ggplot(gapminder, aes(x=year, y=lifeExp, color=continent)) +
geom_smooth(aes(fill=continent), method="loess") +
guides(fill=FALSE)
direct.label(plt, method = NULL, debug = FALSE)
plt <- ggplot(gapminder, aes(x=year, y=lifeExp, color=continent)) +
geom_point(size=1.5) +
geom_smooth(aes(fill=continent), method="loess") +
guides(fill=FALSE)
direct.label(plt, method = NULL, debug = FALSE)
plt <- ggplot(gapminder, aes(x=year, y=lifeExp, color=continent)) +
geom_smooth(aes(fill=continent), method="loess") +
guides(fill=FALSE)
direct.label(plt, method = NULL, debug = FALSE)
plt <- ggplot(gapminder, aes(x=year, y=lifeExp, color=continent)) +
geom_point(size=0) +
geom_smooth(aes(fill=continent), method="loess") +
guides(fill=FALSE)
direct.label(plt, method = NULL, debug = FALSE)
plt <- ggplot(gapminder, aes(x=year, y=lifeExp, color=continent)) +
geom_point(size=0, alpha=0) +
geom_smooth(aes(fill=continent), method="loess") +
guides(fill=FALSE)
direct.label(plt, method = NULL, debug = FALSE)
plt <- ggplot(gapminder, aes(x=year, y=lifeExp, color=continent)) +
geom_point(alpha=0) +
geom_smooth(aes(fill=continent), method="loess") +
guides(fill=FALSE)
direct.label(plt, method = NULL, debug = FALSE)
plt + geom_point(aes(color=continent)) +
geom_smooth(method="loess")
plt + geom_point(aes(color=continent)) +
geom_smooth(aes(fill=continent), method="loess")
plt + geom_point(aes(color=continent))
plt <- ggplot(data=gapminder,
aes(x=gdpPercap, y=lifeExp))
plt
plt + geom_point()
plt + geom_point(aes(color=continent))
plt + geom_smooth(method="loess")
plt + geom_point(aes(color=continent)) +
geom_smooth(method="loess")
ggplot(gapminder, aes(x=gdpPercap, y=lifeExp, size = pop))+
geom_point(aes(group=continent, color=continent), alpha=0.7) +
geom_smooth(aes(group=continent, color=continent), method="loess") +
scale_x_log10() +
theme_bw() +
guides(alpha=0.5, size=FALSE) +
theme(legend.position = c(0.9,0.3))
ggplot(gapminder, aes(x=gdpPercap, y=lifeExp, size = pop))+
geom_point(aes(group=continent, color=continent), alpha=0.7) +
geom_smooth(aes(group=continent, color=continent), method="loess") +
scale_x_log10() +
guides(alpha=0.5, size=FALSE) +
theme(legend.position = c(0.9,0.3))
ggplot(gapminder, aes(x=gdpPercap, y=lifeExp, size = pop))+
geom_point(aes(group=continent, color=continent), alpha=0.7) +
geom_smooth(aes(group=continent, color=continent), method="loess") +
scale_x_log10()
ggplot(gapminder, aes(x=gdpPercap, y=lifeExp, size = pop))+
geom_point(aes(group=continent, color=continent), alpha=0.7) +
geom_smooth(aes(group=continent, color=continent), method="loess")
library(gapminder)
data <- gapminder %>% filter(year=="2007") %>% dplyr::select(-year)
# Most basic bubble plot
data %>%
arrange(desc(pop)) %>%
mutate(country = factor(country, country)) %>%
ggplot(aes(x=gdpPercap, y=lifeExp, size=pop, color=continent)) +
geom_point(alpha=0.5) +
scale_size(range = c(.1, 24), name="Population (M)")
data %>%
arrange(desc(pop)) %>%
mutate(country = factor(country, country)) %>%
ggplot(aes(x=gdpPercap, y=lifeExp, size=pop, color=continent)) +
geom_point(alpha=0.5) +
geom_smooth(aes(group=continent, color=continent), method="loess") +
scale_size(range = c(.1, 24), name="Population (M)")
data %>%
arrange(desc(pop)) %>%
mutate(country = factor(country, country)) %>%
geom_smooth(aes(group=continent, color=continent), method="loess") +
ggplot(aes(x=gdpPercap, y=lifeExp, size=pop, color=continent)) +
geom_point(alpha=0.5) +
geom_smooth(aes(group=continent, color=continent), method="loess") +
scale_size(range = c(.1, 24), name="Population (M)")
data %>%
arrange(desc(pop)) %>%
mutate(country = factor(country, country)) %>%
ggplot(aes(x=gdpPercap, y=lifeExp, size=pop, color=continent)) +
geom_point(alpha=0.5) +
geom_smooth(aes(group=continent, color=continent), method="loess") +
scale_size(range = c(.1, 24), name="Population (M)")
data %>%
arrange(desc(pop)) %>%
mutate(country = factor(country, country)) %>%
ggplot(aes(x=gdpPercap, y=lifeExp, size=pop, color=continent)) +
geom_point(alpha=0.5) +
scale_size(range = c(.1, 24), name="Population (M)")
data %>%
arrange(desc(pop)) %>%
mutate(country = factor(country, country)) %>%
ggplot(aes(x=gdpPercap, y=lifeExp, size=pop, color=continent)) +
geom_point(alpha=0.5) +
scale_size(range = c(.1, 24), name="Population (M)") +
geom_smooth(aes(x = data$gdpPercap,
y = data$lifeExp), formula = y ~ x,
method="lm")
data %>%
arrange(desc(pop)) %>%
mutate(country = factor(country, country)) %>%
ggplot(aes(x=gdpPercap, y=lifeExp, size=pop, color=continent)) +
geom_point(alpha=0.5) +
scale_size(range = c(.1, 24), name="Population (M)") +
geom_smooth(aes(x = data$gdpPercap,
y = data$lifeExp,
group = data$continent,
color = data$continent), formula = y ~ x,
method="lm",
inherit.aes = FALSE)
library(ggplot2)
library(dplyr)    # data munging
library(scales)  # nicer axis scale labels
install.packages("gapminder")
library(gapminder)
colnames(gapminder)
summary(gapminder)
no_miss <- gapminder[complete.cases(gapminder),];
## since no_miss is equal length as gapminder, we can assume they are all complete rows
checkMissingYears <- table(gapminder$country, gapminder$year);
## this table contains only 1s upon quick visual inspection, so we're good, but I'll automate this a bit to make it easier in case we are working with a larger dataset
unique(checkMissingYears)
## Since this is equal to 1 and no other values, we can safely say that all countries have data for all the years since there would also be a zero as a unique value if even just one country were missing data for a year.
## Since there are 12 years of data for each country and we know there is no missing data, we just divide by 12 to get the number of unique countries per continent.
table(gapminder$continent)/12
ggplot(gapminder, aes(x=continent)) + geom_bar()
ggplot(gapminder, aes(x=continent, fill=continent)) + geom_bar()
ggplot(gapminder, aes(x=continent, fill=continent)) +
geom_bar(aes(y=..count../12)) +
labs(y="Number of countries") +
guides(fill=FALSE)
ggplot(gapminder, aes(x=lifeExp)) +
geom_density()
ggplot(data=gapminder, aes(x=lifeExp)) +
geom_density(size=1.5, fill="pink", alpha=0.3)
ggplot(data=gapminder, aes(x=lifeExp, fill=continent)) +
geom_density(alpha=0.3)
gap1 <- ggplot(data=gapminder, aes(x=continent, y=lifeExp, fill=continent))
gap1 +
geom_boxplot()
gap1 + geom_violin()+
guides(fill=FALSE)+
coord_flip()
gapminder %>%
mutate(continent = reorder(continent, lifeExp, FUN=median))
gapminder %>%
mutate(continent = reorder(continent, lifeExp, FUN=max)) %>%
ggplot(aes(x=continent, y=lifeExp, fill=continent)) +
geom_boxplot(outlier.size=2)
ggplot(data=gapminder, aes(x=gdpPercap)) +
geom_density()
## I'm seeing more of an F-distribution in this case, with a ling tail stretching out to the right.
ggplot(data=gapminder, aes(x=gdpPercap, FUN=continent, fill=continent)) +
geom_density(alpha=0.3)+
scale_x_log10()
## was getting some weird results with coord_trans(x="log10"), so I found this online :P
ggplot(gapminder, aes(x=year, y=lifeExp, group=country)) +
geom_line()
gapminder %>%
group_by(country) %>%
summarise(sd=sd(lifeExp), IQR=IQR(lifeExp)) %>%
top_n(8) %>%
arrange(desc(sd))
gapminder %>%
group_by(country) %>%
summarise(mean=mean(lifeExp), sd=sd(lifeExp)) %>%
arrange(desc(sd))
gapminder %>%
group_by(continent, year) %>%
summarise(lifeExp=median(lifeExp)) %>% head()
gapminder %>%
group_by(continent, year) %>%
summarise(lifeExp=median(lifeExp)) %>%
ggplot(aes(x=year, y=lifeExp, color=continent)) +
geom_line(size=1) +
geom_point(size=1.5)
library(ggplot2)
library(dplyr)    # data munging
library(scales)  # nicer axis scale labels
install.packages("gapminder")
library(gapminder)
colnames(gapminder)
data %>%
arrange(desc(pop)) %>%
mutate(country = factor(country, country)) %>%
ggplot(aes(x=gdpPercap, y=lifeExp, size=pop, color=continent)) +
geom_point(alpha=0.5) +
scale_size(range = c(.1, 24), name="Population (M)") +
geom_smooth(aes(x = data$gdpPercap,
y = data$lifeExp,
group = data$continent,
color = data$continent), formula = y ~ x,
method="lm",
inherit.aes = FALSE)
ggplot(gapminder, aes(x=gdpPercap, y=lifeExp, size = pop))+
geom_point(aes(group=continent, color=continent), alpha=0.7) +
geom_smooth(aes(group=continent, color=continent), method="loess")
ggplot(gapminder, aes(x=gdpPercap, y=lifeExp, size = pop))+
geom_point(aes(group=continent, color=continent), alpha=0.7) +
geom_smooth(aes(group=continent, color=continent), method="loess") +
scale_x_log10(labels=scales::comma)
gapminder %>%
arrange(desc(pop)) %>%
mutate(country = factor(country, country)) %>%
ggplot(aes(x=gdpPercap, y=lifeExp, size=pop, color=continent)) +
geom_point(alpha=0.5) +
scale_size(range = c(.1, 24), name="Population (M)") +
geom_smooth(aes(x = data$gdpPercap,
y = data$lifeExp,
group = data$continent,
color = data$continent), formula = y ~ x,
method="lm",
inherit.aes = FALSE)
gapminder %>%
arrange(desc(pop)) %>%
mutate(country = factor(country, country)) %>%
ggplot(aes(x=gdpPercap, y=lifeExp, size=pop, color=continent)) +
geom_point(alpha=0.5) +
scale_size(range = c(.1, 24), name="Population (M)")
gapminder %>%
arrange(desc(pop)) %>%
mutate(country = factor(country, country))
ggplot(gapminder, aes(x=gdpPercap, y=lifeExp, size = pop))+
geom_point(aes(group=continent, color=continent), alpha=0.7) +
geom_smooth(aes(x = data$gdpPercap,
y = data$lifeExp,
group = data$continent,
color = data$continent), formula = y ~ x,
method="lm",
inherit.aes = FALSE) +
scale_x_log10(labels=scales::comma)
ggplot(gapminder, aes(x=gdpPercap, y=lifeExp, size = pop))+
geom_point(aes(group=continent, color=continent), alpha=0.7) +
geom_smooth(aes(x = gdpPercap,
y = lifeExp,
group = continent,
color = continent), formula = y ~ x,
method="lm",
inherit.aes = FALSE)
ggplot(gapminder, aes(x=gdpPercap, y=lifeExp, size = pop))+
geom_point(aes(group=continent, color=continent), alpha=0.7) +
geom_smooth(aes(x = gdpPercap,
y = lifeExp,
group = continent,
color = continent), formula = y ~ x,
method="lm",
inherit.aes = FALSE) +
scale_x_log10(labels=scales::comma)
# Input load. Please do not change #
`dataset` = read.csv('C:/Users/Robin/REditorWrapper_c7850577-2b95-461b-8f4b-34c3c06cd3b0/input_df_d8d1c339-2502-4e67-9dcc-b0f8339df330.csv', check.names = FALSE, encoding = "UTF-8", blank.lines.skip = FALSE);
# Original Script. Please update your script content here and once completed copy below section back to the original editing window #
# The following code to create a dataframe and remove duplicated rows is always executed and acts as a preamble for your script:
install.packages(gridExtra);
library(gridExtra);
anova_two_way <- aov(Profit~Country + Year, dataset);
anova_table <- tableGrob(summary(dataset$Profit));
summaryTable <- summary(anova_two_way);
summaryTable <- as.data.frame(summaryTable[[1]]);
grid.table(summaryTable)
install.packages("tidyverse")
install.packages("knitr")
install.packages("kableExtra")
install.packages("stargazer")
shiny::runApp('C:/Users/Robin/OneDrive/CSL LAB/CODING/StatsHelper/StatsHelper')
runApp('C:/Users/Robin/OneDrive/CSL LAB/CODING/StatsHelper/StatsHelper')
runApp('C:/Users/Robin/OneDrive/CSL LAB/CODING/StatsHelper/StatsHelper')
